From 5590de062e63b73ac1bff2a786464b3f41e0d6bd Mon Sep 17 00:00:00 2001
From: Davide Cavion <davide@rfnm.io>
Date: Tue, 28 Nov 2023 17:35:20 +0100
Subject: [PATCH 5/7] Defer PCIe init until Si5510 is providing a clock

Signed-off-by: Davide Cavion <davide@rfnm.io>
---
 drivers/phy/freescale/phy-fsl-imx8-pcie.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/phy/freescale/phy-fsl-imx8-pcie.c b/drivers/phy/freescale/phy-fsl-imx8-pcie.c
index 00fb8a7f0246..2c5f4fb1d470 100644
--- a/drivers/phy/freescale/phy-fsl-imx8-pcie.c
+++ b/drivers/phy/freescale/phy-fsl-imx8-pcie.c
@@ -9,6 +9,7 @@
 #include <linux/delay.h>
 #include <linux/phy/phy.h>
 #include <linux/platform_device.h>
+#include <linux/rfnm-shared.h>
 
 #define PHY_PLL_LOCK_WAIT_MAX_RETRIES	2000
 #define IMX8MP_PCIE_PHY_FLAG_EXT_OSC	BIT(0)
@@ -226,6 +227,16 @@ __setup("pcie_phy_tuned=", imx8_pcie_phy_fine_tune);
 
 static int imx8_pcie_phy_probe(struct platform_device *pdev)
 {
+	struct rfnm_bootconfig *cfg;
+	struct rfnm_eeprom_data *eeprom_data;
+	cfg = memremap(RFNM_BOOTCONFIG_PHYADDR, SZ_4M, MEMREMAP_WB);
+
+	if(cfg->pcie_clock_ready == 0xff) {
+		printk("RFNM: Deferring PCIe probe...\n");
+		memunmap(cfg);
+		return -EPROBE_DEFER;
+	}
+
 	u32 val = 0;
 	struct phy_provider *phy_provider;
 	struct device *dev = &pdev->dev;
@@ -233,6 +244,7 @@ static int imx8_pcie_phy_probe(struct platform_device *pdev)
 	struct imx8_pcie_phy *imx8_phy;
 	struct resource *res;
 
+
 	imx8_phy = devm_kzalloc(dev, sizeof(*imx8_phy), GFP_KERNEL);
 	if (!imx8_phy)
 		return -ENOMEM;
-- 
2.25.1

