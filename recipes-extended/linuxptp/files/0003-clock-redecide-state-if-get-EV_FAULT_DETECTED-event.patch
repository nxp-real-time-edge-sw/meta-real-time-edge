From b757121b8f7e36b75eb013908546fd395a80ceac Mon Sep 17 00:00:00 2001
From: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Date: Mon, 28 Oct 2024 18:20:52 +0800
Subject: [PATCH 3/7] clock: redecide state if get EV_FAULT_DETECTED event

IEEE 802.1AS-2011's methodology for faults is to avoid waiting
in that FAULTY state in hopes that management will notice.
Instead, move on to search for a valid non-faulty state. If
supported, the fault is logged so that management can notice
later, but that logging isn't a requirement.

This patch is to invoke BMCA to redecide state if get
EV_FAULT_DETECTED event.

Signed-off-by: Rodney Greenstreet <rodney.greenstreet@ni.com>
Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
Signed-off-by: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Upstream-Status: Pending
---
 clock.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/clock.c b/clock.c
index c217459..0708902 100644
--- a/clock.c
+++ b/clock.c
@@ -1815,6 +1815,9 @@ int clock_poll(struct clock *c)
 				if (EV_ANNOUNCE_RECEIPT_TIMEOUT_EXPIRES == event) {
 					c->sde = 1;
 				}
+				if (EV_FAULT_DETECTED == event) {
+					c->sde = 1;
+				}
 				port_dispatch(p, event, 0);
 				/* Clear any fault after a little while. */
 				if ((PS_FAULTY == port_state(p)) && (prior_state != PS_FAULTY)) {
-- 
2.34.1

