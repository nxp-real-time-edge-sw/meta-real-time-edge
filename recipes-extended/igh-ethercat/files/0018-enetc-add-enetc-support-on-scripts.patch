From ae86feb64dba183f1b5461ea05c8352e37aa96b2 Mon Sep 17 00:00:00 2001
From: Wenbin Song <wenbin.song@nxp.com>
Date: Mon, 18 Oct 2021 14:23:54 +0800
Subject: [PATCH 18/18] enetc: add enetc support on scripts

Due to be shared by multiple enetc devices, the ethernet driver can
not be removed directly. So the ethernet driver is still built in
kernel as before, and unbind it when ethercat driver "ec_enetc" is required.

Signed-off-by: Wenbin Song <wenbin.song@nxp.com>
Upstream-Status: Pending
---
 script/ethercat.conf  |  2 +-
 script/ethercatctl.in | 47 ++++++++++++++++++++++++++++++++++++++++---
 2 files changed, 45 insertions(+), 4 deletions(-)

diff --git a/script/ethercat.conf b/script/ethercat.conf
index 3dd71ae..cd36002 100644
--- a/script/ethercat.conf
+++ b/script/ethercat.conf
@@ -36,7 +36,7 @@ MASTER0_DEVICE=""
 # the EtherCAT-capable ones. If a certain (EtherCAT-capable) driver is not
 # found, a warning will appear.
 #
-# Possible values: 8139too, e100, e1000, e1000e, r8169, fec, generic. Separate
+# Possible values: 8139too, e100, e1000, e1000e, r8169, fec, enetc, generic. Separate
 # multiple drivers with spaces.
 #
 # Note: The e100, e1000, e1000e, fec and r8169 drivers are not built by default.
diff --git a/script/ethercatctl.in b/script/ethercatctl.in
index 281794e..c57750c 100755
--- a/script/ethercatctl.in
+++ b/script/ethercatctl.in
@@ -42,6 +42,7 @@ ETHERCAT=@prefix@/bin/ethercat
 #------------------------------------------------------------------------------
 
 ETHERCAT_CONFIG=/etc/ethercat.conf
+ENETC_LOG=/var/ethercat_enetc_mac
 
 if [ ! -r ${ETHERCAT_CONFIG} ]; then
     echo ${ETHERCAT_CONFIG} not existing;
@@ -65,6 +66,20 @@ parse_mac_address() {
 
 #------------------------------------------------------------------------------
 
+get_enetc_device_name() {
+    for inter in $(ls /sys/class/net); do
+        read mac < /sys/class/net/${inter}/address
+        if [ "x${mac}" = "x$1" ]; then
+            if [ "$(basename $(readlink /sys/class/net/${inter}/device/driver))" = "fsl_enetc" ]; then
+                echo $(basename $(readlink /sys/class/net/${inter}/device))
+                break
+            fi
+        fi
+    done
+}
+
+#------------------------------------------------------------------------------
+
 case "${1}" in
 
 start)
@@ -107,7 +122,18 @@ start)
             continue # ec_* module not found
         fi
 
-        if [ ${MODULE} != "generic" ]; then
+        if [ ${MODULE} = "enetc" ]; then
+            touch ${ENETC_LOG}
+            all_devices=$(echo "${DEVICES} ${BACKUPS}" | tr "," " ")
+            for mac in ${all_devices}; do
+                if_device=$(get_enetc_device_name ${mac})
+                if [ ! -z ${if_device} ]; then
+                    echo ${if_device} > /sys/bus/pci/drivers/fsl_enetc/unbind  #unbind the ethernet driver "fsl_enetc"
+                    echo ${if_device} >> ${ENETC_LOG} #use to restore the ethernet driver "fsl_enetc" when stopping ethercat
+                fi
+            done
+
+        elif [ ${MODULE} != "generic" ]; then
             # try to unload standard module
             if lsmod | grep "^${MODULE} " > /dev/null; then
                 if ! ${RMMOD} ${MODULE}; then
@@ -118,7 +144,12 @@ start)
         fi
 
         if ! ${MODPROBE} ${MODPROBE_FLAGS} ${ECMODULE}; then
-            if [ ${MODULE} != "generic" ]; then
+            if [ ${MODULE} = "enetc" ] && [ -f ${ENETC_LOG} ]; then
+                while read mac; do
+                    echo $mac > /sys/bus/pci/drivers/fsl_enetc/bind # try to restore
+                done < ${ENETC_LOG}
+                rm -f ${ENETC_LOG}
+            elif [ ${MODULE} != "generic" ]; then
                 ${MODPROBE} ${MODPROBE_FLAGS} ${MODULE} # try to restore
             fi
             ${RMMOD} ${LOADED_MODULES}
@@ -149,7 +180,17 @@ stop)
 
     # load standard modules again
     for MODULE in ${DEVICE_MODULES}; do
-        if [ ${MODULE} == "generic" ]; then
+        if [ ${MODULE} = "enetc" ]; then
+            if [ ! -f ${ENETC_LOG} ]; then
+                continue
+            fi
+
+            while read mac; do
+                echo $mac > /sys/bus/pci/drivers/fsl_enetc/bind
+            done < ${ENETC_LOG}
+            rm -f ${ENETC_LOG}
+            continue
+        elif [ ${MODULE} == "generic" ]; then
             continue
         fi
         ${MODPROBE} ${MODPROBE_FLAGS} ${MODULE}
-- 
2.25.1

