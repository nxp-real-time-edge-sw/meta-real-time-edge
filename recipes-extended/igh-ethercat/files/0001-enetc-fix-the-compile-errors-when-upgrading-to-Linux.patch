From 43dd014e45746945855519f6ed2ac80de338d3c0 Mon Sep 17 00:00:00 2001
From: Wenbin Song <wenbin.song@nxp.com>
Date: Wed, 16 Mar 2022 11:55:47 +0800
Subject: [PATCH] enetc: fix the compile errors when upgrading to Linux-5.15.y

The struct ethtool_ops is changed on Linux-5.15.y

Signed-off-by: Wenbin Song <wenbin.song@nxp.com>
Upstream-Status: Pending
---
 devices/enetc/enetc_ethtool.c | 104 ++++++++--------------------------
 1 file changed, 24 insertions(+), 80 deletions(-)

diff --git a/devices/enetc/enetc_ethtool.c b/devices/enetc/enetc_ethtool.c
index 902eeca..238ab50 100644
--- a/devices/enetc/enetc_ethtool.c
+++ b/devices/enetc/enetc_ethtool.c
@@ -627,7 +627,9 @@ static void enetc_get_ringparam(struct net_device *ndev,
 }
 
 static int enetc_get_coalesce(struct net_device *ndev,
-			      struct ethtool_coalesce *ic)
+			      struct ethtool_coalesce *ic,
+			      struct kernel_ethtool_coalesce *kernel_coal,
+			      struct netlink_ext_ack *extack)
 {
 	struct enetc_ndev_priv *priv = netdev_priv(ndev);
 	struct enetc_int_vector *v = priv->int_vector[0];
@@ -644,7 +646,9 @@ static int enetc_get_coalesce(struct net_device *ndev,
 }
 
 static int enetc_set_coalesce(struct net_device *ndev,
-			      struct ethtool_coalesce *ic)
+			      struct ethtool_coalesce *ic,
+			      struct kernel_ethtool_coalesce *kernel_coal,
+			      struct netlink_ext_ack *extack)
 {
 	struct enetc_ndev_priv *priv = netdev_priv(ndev);
 	u32 rx_ictt, tx_ictt;
@@ -749,6 +753,22 @@ static int enetc_set_wol(struct net_device *dev,
 	return ret;
 }
 
+static void enetc_get_pauseparam(struct net_device *dev,
+				 struct ethtool_pauseparam *pause)
+{
+	struct enetc_ndev_priv *priv = netdev_priv(dev);
+
+	phylink_ethtool_get_pauseparam(priv->phylink, pause);
+}
+
+static int enetc_set_pauseparam(struct net_device *dev,
+				struct ethtool_pauseparam *pause)
+{
+	struct enetc_ndev_priv *priv = netdev_priv(dev);
+
+	return phylink_ethtool_set_pauseparam(priv->phylink, pause);
+}
+
 static int enetc_get_link_ksettings(struct net_device *dev,
 				    struct ethtool_link_ksettings *cmd)
 {
@@ -771,82 +791,6 @@ static int enetc_set_link_ksettings(struct net_device *dev,
 	return phylink_ethtool_ksettings_set(priv->phylink, cmd);
 }
 
-static int enetc_set_preempt(struct net_device *ndev,
-			     struct ethtool_fp *pt)
-{
-	struct enetc_ndev_priv *priv = netdev_priv(ndev);
-	u32 preempt, temp;
-	int rafs;
-	int i;
-
-	if (!pt)
-		return -EINVAL;
-
-	if (pt->min_frag_size < 60 || pt->min_frag_size > 252)
-		return -EINVAL;
-
-	rafs = DIV_ROUND_UP((pt->min_frag_size + 4), 64) - 1;
-
-	if (!pt->fp_enabled)
-		preempt = 0x0;
-	else
-		preempt = pt->preemptible_queues_mask;
-
-	temp = enetc_rd(&priv->si->hw, ENETC_QBV_PTGCR_OFFSET);
-	if (temp & ENETC_QBV_TGE)
-		enetc_wr(&priv->si->hw, ENETC_QBV_PTGCR_OFFSET,
-			 temp & (~ENETC_QBV_TGPE));
-
-	for (i = 0; i < 8; i++) {
-		/* 1 Enabled. Traffic is transmitted on the preemptive MAC. */
-		temp = enetc_port_rd(&priv->si->hw, ENETC_PTCFPR(i));
-
-		if ((preempt >> i) & 0x1)
-			enetc_port_wr(&priv->si->hw,
-				      ENETC_PTCFPR(i),
-				      temp | ENETC_FPE);
-		else
-			enetc_port_wr(&priv->si->hw,
-				      ENETC_PTCFPR(i),
-				      temp & ~ENETC_FPE);
-	}
-
-	temp = enetc_port_rd(&priv->si->hw, ENETC_MMCSR);
-	temp &= ~ENETC_MMCSR_RAFS_MASK;
-	temp |= ENETC_MMCSR_RAFS(rafs);
-	enetc_port_wr(&priv->si->hw, ENETC_MMCSR, temp);
-
-	return 0;
-}
-
-static int enetc_get_preempt(struct net_device *ndev,
-			     struct ethtool_fp *pt)
-{
-	struct enetc_ndev_priv *priv = netdev_priv(ndev);
-	u32 temp;
-	int i;
-
-	if (!pt)
-		return -EINVAL;
-
-	if (enetc_port_rd(&priv->si->hw, ENETC_PFPMR) & ENETC_PFPMR_PMACE)
-		pt->fp_enabled = true;
-	else
-		pt->fp_enabled = false;
-
-	pt->preemptible_queues_mask = 0;
-	for (i = 0; i < 8; i++)
-		if (enetc_port_rd(&priv->si->hw, ENETC_PTCFPR(i)) & 0x80000000)
-			pt->preemptible_queues_mask |= 1 << i;
-
-	pt->fp_supported = !!(priv->si->hw_features & ENETC_SI_F_QBU);
-	pt->supported_queues_mask = 0xff;
-	temp = enetc_port_rd(&priv->si->hw, ENETC_MMCSR);
-	pt->min_frag_size = (ENETC_MMCSR_GET_RAFS(temp) + 1) * 64;
-
-	return 0;
-}
-
 static const struct ethtool_ops enetc_pf_ethtool_ops = {
 	.supported_coalesce_params = ETHTOOL_COALESCE_USECS |
 				     ETHTOOL_COALESCE_MAX_FRAMES |
@@ -871,8 +815,8 @@ static const struct ethtool_ops enetc_pf_ethtool_ops = {
 	.get_ts_info = enetc_get_ts_info,
 	.get_wol = enetc_get_wol,
 	.set_wol = enetc_set_wol,
-	.set_preempt = enetc_set_preempt,
-	.get_preempt = enetc_get_preempt,
+	.get_pauseparam = enetc_get_pauseparam,
+	.set_pauseparam = enetc_set_pauseparam,
 };
 
 static const struct ethtool_ops enetc_vf_ethtool_ops = {
-- 
2.25.1

